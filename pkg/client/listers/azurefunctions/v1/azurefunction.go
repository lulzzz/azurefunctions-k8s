/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/yaron2/azfuncs/pkg/apis/azurefunctions/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureFunctionLister helps list AzureFunctions.
type AzureFunctionLister interface {
	// List lists all AzureFunctions in the indexer.
	List(selector labels.Selector) (ret []*v1.AzureFunction, err error)
	// AzureFunctions returns an object that can list and get AzureFunctions.
	AzureFunctions(namespace string) AzureFunctionNamespaceLister
	AzureFunctionListerExpansion
}

// azureFunctionLister implements the AzureFunctionLister interface.
type azureFunctionLister struct {
	indexer cache.Indexer
}

// NewAzureFunctionLister returns a new AzureFunctionLister.
func NewAzureFunctionLister(indexer cache.Indexer) AzureFunctionLister {
	return &azureFunctionLister{indexer: indexer}
}

// List lists all AzureFunctions in the indexer.
func (s *azureFunctionLister) List(selector labels.Selector) (ret []*v1.AzureFunction, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AzureFunction))
	})
	return ret, err
}

// AzureFunctions returns an object that can list and get AzureFunctions.
func (s *azureFunctionLister) AzureFunctions(namespace string) AzureFunctionNamespaceLister {
	return azureFunctionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureFunctionNamespaceLister helps list and get AzureFunctions.
type AzureFunctionNamespaceLister interface {
	// List lists all AzureFunctions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AzureFunction, err error)
	// Get retrieves the AzureFunction from the indexer for a given namespace and name.
	Get(name string) (*v1.AzureFunction, error)
	AzureFunctionNamespaceListerExpansion
}

// azureFunctionNamespaceLister implements the AzureFunctionNamespaceLister
// interface.
type azureFunctionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureFunctions in the indexer for a given namespace.
func (s azureFunctionNamespaceLister) List(selector labels.Selector) (ret []*v1.AzureFunction, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AzureFunction))
	})
	return ret, err
}

// Get retrieves the AzureFunction from the indexer for a given namespace and name.
func (s azureFunctionNamespaceLister) Get(name string) (*v1.AzureFunction, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("azurefunction"), name)
	}
	return obj.(*v1.AzureFunction), nil
}
